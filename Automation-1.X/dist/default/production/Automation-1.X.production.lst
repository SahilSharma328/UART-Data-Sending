

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jan 10 11:08:53 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F45K22 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  000822                     __pidataCOMRAM:
    55                           	opt stack 0
    56                           
    57                           ;initializer for main@F6948
    58  000822  53                 	db	83
    59  000823  61                 	db	97
    60  000824  68                 	db	104
    61  000825  69                 	db	105
    62  000826  6C                 	db	108
    63  000827  00                 	db	0
    64  0000                     _ANSELC	set	3898
    65  0000                     _TRISC	set	3988
    66  0000                     _TXREG1	set	4013
    67  0000                     _SPBRG1	set	4015
    68  0000                     _SPBRGH1	set	4016
    69  0000                     _TXSTA1bits	set	4012
    70  0000                     _RCSTA1bits	set	4011
    71  0000                     _BAUDCON1bits	set	4024
    72  0000                     _TXSTAbits	set	4012
    73  0000                     _RCSTA1	set	4011
    74  0000                     _TXSTA1	set	4012
    75  0000                     _TX1IF	set	31988
    76                           
    77                           	psect	smallconst
    78  000600                     __psmallconst:
    79                           	opt stack 0
    80  000600  00                 	db	0
    81  000601                     STR_1:
    82  000601  0D                 	db	13
    83  000602  0A                 	db	10
    84  000603  00                 	db	0
    85  000604  00                 	db	0	; dummy byte at the end
    86  0000                     
    87                           ; #config settings
    88                           
    89                           	psect	cinit
    90  0007EC                     __pcinit:
    91                           	opt stack 0
    92  0007EC                     start_initialization:
    93                           	opt stack 0
    94  0007EC                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Initialize objects allocated to COMRAM (6 bytes)
    98                           ; load TBLPTR registers with __pidataCOMRAM
    99  0007EC  0E22               	movlw	low __pidataCOMRAM
   100  0007EE  6EF6               	movwf	tblptrl,c
   101  0007F0  0E08               	movlw	high __pidataCOMRAM
   102  0007F2  6EF7               	movwf	tblptrh,c
   103  0007F4  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   104  0007F6  6EF8               	movwf	tblptru,c
   105  0007F8  EE00  F01E         	lfsr	0,__pdataCOMRAM
   106  0007FC  EE10 F006          	lfsr	1,6
   107  000800                     copy_data0:
   108  000800  0009               	tblrd		*+
   109  000802  CFF5 FFEE          	movff	tablat,postinc0
   110  000806  50E5               	movf	postdec1,w,c
   111  000808  50E1               	movf	fsr1l,w,c
   112  00080A  E1FA               	bnz	copy_data0
   113  00080C                     end_of_initialization:
   114                           	opt stack 0
   115  00080C                     __end_of__initialization:
   116                           	opt stack 0
   117  00080C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   118  00080E  6EF8               	movwf	tblptru,c
   119  000810  0100               	movlb	0
   120  000812  EF03  F003         	goto	_main	;jump to C main() function
   121                           tblptru	equ	0xFF8
   122                           tblptrh	equ	0xFF7
   123                           tblptrl	equ	0xFF6
   124                           tablat	equ	0xFF5
   125                           postinc0	equ	0xFEE
   126                           postdec1	equ	0xFE5
   127                           fsr1l	equ	0xFE1
   128                           
   129                           	psect	dataCOMRAM
   130  00001E                     __pdataCOMRAM:
   131                           	opt stack 0
   132  00001E                     main@F6948:
   133                           	opt stack 0
   134  00001E                     	ds	6
   135                           tblptru	equ	0xFF8
   136                           tblptrh	equ	0xFF7
   137                           tblptrl	equ	0xFF6
   138                           tablat	equ	0xFF5
   139                           postinc0	equ	0xFEE
   140                           postdec1	equ	0xFE5
   141                           fsr1l	equ	0xFE1
   142                           
   143                           	psect	cstackCOMRAM
   144  000001                     __pcstackCOMRAM:
   145                           	opt stack 0
   146  000001                     ?___lldiv:
   147                           	opt stack 0
   148  000001                     uart_send1@ch:
   149                           	opt stack 0
   150  000001                     uart_string1@str:
   151                           	opt stack 0
   152  000001                     ___lldiv@dividend:
   153                           	opt stack 0
   154                           
   155                           ; 4 bytes @ 0x0
   156  000001                     	ds	2
   157  000003                     
   158                           ; 1 bytes @ 0x2
   159  000003                     	ds	2
   160  000005                     ___lldiv@divisor:
   161                           	opt stack 0
   162                           
   163                           ; 4 bytes @ 0x4
   164  000005                     	ds	4
   165  000009                     ___lldiv@quotient:
   166                           	opt stack 0
   167                           
   168                           ; 4 bytes @ 0x8
   169  000009                     	ds	4
   170  00000D                     ___lldiv@counter:
   171                           	opt stack 0
   172                           
   173                           ; 1 bytes @ 0xC
   174  00000D                     	ds	1
   175  00000E                     uart_init1@baud:
   176                           	opt stack 0
   177                           
   178                           ; 4 bytes @ 0xD
   179  00000E                     	ds	4
   180  000012                     uart_init1@n:
   181                           	opt stack 0
   182                           
   183                           ; 2 bytes @ 0x11
   184  000012                     	ds	2
   185  000014                     ??_main:
   186                           
   187                           ; 1 bytes @ 0x13
   188  000014                     	ds	2
   189  000016                     main@name:
   190                           	opt stack 0
   191                           
   192                           ; 6 bytes @ 0x15
   193  000016                     	ds	6
   194  00001C                     main@i:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x1B
   198  00001C                     	ds	2
   199                           tblptru	equ	0xFF8
   200                           tblptrh	equ	0xFF7
   201                           tblptrl	equ	0xFF6
   202                           tablat	equ	0xFF5
   203                           postinc0	equ	0xFEE
   204                           postdec1	equ	0xFE5
   205                           fsr1l	equ	0xFE1
   206                           
   207 ;;
   208 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   209 ;;
   210 ;; *************** function _main *****************
   211 ;; Defined at:
   212 ;;		line 53 in file "automation-1.c"
   213 ;; Parameters:    Size  Location     Type
   214 ;;		None
   215 ;; Auto vars:     Size  Location     Type
   216 ;;  name            6   21[COMRAM] unsigned char [6]
   217 ;;  i               2   27[COMRAM] int 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   227 ;;      Params:         0       0       0       0       0       0       0
   228 ;;      Locals:         8       0       0       0       0       0       0
   229 ;;      Temps:          2       0       0       0       0       0       0
   230 ;;      Totals:        10       0       0       0       0       0       0
   231 ;;Total ram usage:       10 bytes
   232 ;; Hardware stack levels required when called:    2
   233 ;; This function calls:
   234 ;;		_uart_init1
   235 ;;		_uart_send1
   236 ;;		_uart_string1
   237 ;; This function is called by:
   238 ;;		Startup code after reset
   239 ;; This function uses a non-reentrant model
   240 ;;
   241                           
   242                           	psect	text0
   243  000606                     __ptext0:
   244                           	opt stack 0
   245  000606                     _main:
   246                           	opt stack 29
   247                           
   248                           ;automation-1.c: 55: ANSELC=0;
   249                           
   250                           ;incstack = 0
   251  000606  0E00               	movlw	0
   252  000608  010F               	movlb	15	; () banked
   253  00060A  6F3A               	movwf	58,b	;volatile
   254                           
   255                           ;automation-1.c: 56: TRISC=0x00;
   256  00060C  0E00               	movlw	0
   257  00060E  6E94               	movwf	3988,c	;volatile
   258                           
   259                           ; BSR set to: 15
   260                           ;automation-1.c: 57: char name[6]={"Sahil"};
   261  000610  EE20  F01E         	lfsr	2,main@F6948
   262  000614  EE10  F016         	lfsr	1,main@name
   263  000618  0E05               	movlw	5
   264  00061A                     u191:
   265  00061A  CFDB FFE3          	movff	plusw2,plusw1
   266  00061E  06E8               	decf	wreg,f,c
   267  000620  E2FC               	bc	u191
   268                           
   269                           ; BSR set to: 15
   270                           ;automation-1.c: 58: uart_init1(115200);
   271  000622  0E00               	movlw	0
   272  000624  6E0E               	movwf	uart_init1@baud,c
   273  000626  0EC2               	movlw	194
   274  000628  6E0F               	movwf	uart_init1@baud+1,c
   275  00062A  0E01               	movlw	1
   276  00062C  6E10               	movwf	uart_init1@baud+2,c
   277  00062E  0E00               	movlw	0
   278  000630  6E11               	movwf	uart_init1@baud+3,c
   279  000632  ECCF  F003         	call	_uart_init1	;wreg free
   280                           
   281                           ;automation-1.c: 59: _delay((unsigned long)((2000)*(16000000/4000.0)));
   282  000636  0E29               	movlw	41
   283  000638  6E15               	movwf	(??_main+1)& (0+255),c
   284  00063A  0E96               	movlw	150
   285  00063C  6E14               	movwf	??_main& (0+255),c
   286  00063E  0E7F               	movlw	127
   287  000640                     u227:
   288  000640  2EE8               	decfsz	wreg,f,c
   289  000642  D7FE               	bra	u227
   290  000644  2E14               	decfsz	??_main& (0+255),f,c
   291  000646  D7FC               	bra	u227
   292  000648  2E15               	decfsz	(??_main+1)& (0+255),f,c
   293  00064A  D7FA               	bra	u227
   294  00064C  F000               	nop	
   295                           
   296                           ;automation-1.c: 60: uart_string1(name);
   297  00064E  0E16               	movlw	low main@name
   298  000650  6E01               	movwf	uart_string1@str,c
   299  000652  0E00               	movlw	high main@name
   300  000654  6E02               	movwf	uart_string1@str+1,c
   301  000656  ECA5  F003         	call	_uart_string1	;wreg free
   302                           
   303                           ;automation-1.c: 61: _delay((unsigned long)((2000)*(16000000/4000.0)));
   304  00065A  0E29               	movlw	41
   305  00065C  6E15               	movwf	(??_main+1)& (0+255),c
   306  00065E  0E96               	movlw	150
   307  000660  6E14               	movwf	??_main& (0+255),c
   308  000662  0E7F               	movlw	127
   309  000664                     u237:
   310  000664  2EE8               	decfsz	wreg,f,c
   311  000666  D7FE               	bra	u237
   312  000668  2E14               	decfsz	??_main& (0+255),f,c
   313  00066A  D7FC               	bra	u237
   314  00066C  2E15               	decfsz	(??_main+1)& (0+255),f,c
   315  00066E  D7FA               	bra	u237
   316  000670  D029               	goto	L1
   317  000672                     l812:
   318                           
   319                           ;automation-1.c: 64: {
   320                           ;automation-1.c: 65: for(i=0;i<5;i++)
   321  000672  0E00               	movlw	0
   322  000674  6E1D               	movwf	main@i+1,c
   323  000676  0E00               	movlw	0
   324  000678  6E1C               	movwf	main@i,c
   325  00067A                     l814:
   326  00067A  BE1D               	btfsc	main@i+1,7,c
   327  00067C  D006               	goto	l818
   328  00067E  501D               	movf	main@i+1,w,c
   329  000680  E110               	bnz	l824
   330  000682  0E05               	movlw	5
   331  000684  5C1C               	subwf	main@i,w,c
   332  000686  B0D8               	btfsc	status,0,c
   333  000688  D00C               	goto	l824
   334  00068A                     l818:
   335                           
   336                           ;automation-1.c: 66: {
   337                           ;automation-1.c: 67: uart_send1(name[i]);
   338  00068A  0E16               	movlw	low main@name
   339  00068C  241C               	addwf	main@i,w,c
   340  00068E  6ED9               	movwf	fsr2l,c
   341  000690  0E00               	movlw	high main@name
   342  000692  201D               	addwfc	main@i+1,w,c
   343  000694  6EDA               	movwf	fsr2h,c
   344  000696  50DF               	movf	indf2,w,c
   345  000698  EC0B  F004         	call	_uart_send1
   346  00069C  4A1C               	infsnz	main@i,f,c
   347  00069E  2A1D               	incf	main@i+1,f,c
   348  0006A0  D7EC               	goto	l814
   349  0006A2                     l824:
   350                           
   351                           ;automation-1.c: 68: }
   352                           ;automation-1.c: 69: uart_string1("\r\n");
   353  0006A2  0E01               	movlw	low STR_1
   354  0006A4  6E01               	movwf	uart_string1@str,c
   355  0006A6  0E06               	movlw	high STR_1
   356  0006A8  6E02               	movwf	uart_string1@str+1,c
   357  0006AA  ECA5  F003         	call	_uart_string1	;wreg free
   358                           
   359                           ;automation-1.c: 70: _delay((unsigned long)((2000)*(16000000/4000.0)));
   360  0006AE  0E29               	movlw	41
   361  0006B0  6E15               	movwf	(??_main+1)& (0+255),c
   362  0006B2  0E96               	movlw	150
   363  0006B4  6E14               	movwf	??_main& (0+255),c
   364  0006B6  0E7F               	movlw	127
   365  0006B8                     u247:
   366  0006B8  2EE8               	decfsz	wreg,f,c
   367  0006BA  D7FE               	bra	u247
   368  0006BC  2E14               	decfsz	??_main& (0+255),f,c
   369  0006BE  D7FC               	bra	u247
   370  0006C0  2E15               	decfsz	(??_main+1)& (0+255),f,c
   371  0006C2  D7FA               	bra	u247
   372  0006C4                     L1:
   373  0006C4  F000               	nop	
   374  0006C6  D7D5               	goto	l812
   375  0006C8                     __end_of_main:
   376                           	opt stack 0
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           plusw1	equ	0xFE3
   385                           fsr1l	equ	0xFE1
   386                           indf2	equ	0xFDF
   387                           plusw2	equ	0xFDB
   388                           fsr2h	equ	0xFDA
   389                           fsr2l	equ	0xFD9
   390                           status	equ	0xFD8
   391                           
   392 ;; *************** function _uart_string1 *****************
   393 ;; Defined at:
   394 ;;		line 43 in file "automation-1.c"
   395 ;; Parameters:    Size  Location     Type
   396 ;;  str             2    0[COMRAM] PTR unsigned char 
   397 ;;		 -> STR_1(3), main@name(6), 
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      void 
   402 ;; Registers used:
   403 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   409 ;;      Params:         2       0       0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0       0       0
   412 ;;      Totals:         2       0       0       0       0       0       0
   413 ;;Total ram usage:        2 bytes
   414 ;; Hardware stack levels used:    1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           	psect	text1
   423  00074A                     __ptext1:
   424                           	opt stack 0
   425  00074A                     _uart_string1:
   426                           	opt stack 30
   427                           
   428                           ;automation-1.c: 45: while((*str)!='\0')
   429                           
   430                           ;incstack = 0
   431  00074A  D015               	goto	l798
   432  00074C                     l40:
   433  00074C  A89E               	btfss	3998,4,c	;volatile
   434  00074E  D7FE               	goto	l40
   435                           
   436                           ;automation-1.c: 48: TXREG1=(*str);
   437  000750  C001  FFF6         	movff	uart_string1@str,tblptrl
   438  000754  C002  FFF7         	movff	uart_string1@str+1,tblptrh
   439  000758  6AF8               	clrf	tblptru,c
   440  00075A  0E05               	movlw	(high __ramtop+-1)
   441  00075C  64F7               	cpfsgt	tblptrh,c
   442  00075E  D003               	bra	u167
   443  000760  0008               	tblrd		*
   444  000762  50F5               	movf	tablat,w,c
   445  000764  D005               	bra	u160
   446  000766                     u167:
   447  000766  CFF6 FFE9          	movff	tblptrl,fsr0l
   448  00076A  CFF7 FFEA          	movff	tblptrh,fsr0h
   449  00076E  50EF               	movf	indf0,w,c
   450  000770                     u160:
   451  000770  6EAD               	movwf	4013,c	;volatile
   452                           
   453                           ;automation-1.c: 49: str++;
   454  000772  4A01               	infsnz	uart_string1@str,f,c
   455  000774  2A02               	incf	uart_string1@str+1,f,c
   456  000776                     l798:
   457  000776  C001  FFF6         	movff	uart_string1@str,tblptrl
   458  00077A  C002  FFF7         	movff	uart_string1@str+1,tblptrh
   459  00077E  6AF8               	clrf	tblptru,c
   460  000780  0E05               	movlw	(high __ramtop+-1)
   461  000782  64F7               	cpfsgt	tblptrh,c
   462  000784  D003               	bra	u177
   463  000786  0008               	tblrd		*
   464  000788  50F5               	movf	tablat,w,c
   465  00078A  D005               	bra	u170
   466  00078C                     u177:
   467  00078C  CFF6 FFE9          	movff	tblptrl,fsr0l
   468  000790  CFF7 FFEA          	movff	tblptrh,fsr0h
   469  000794  50EF               	movf	indf0,w,c
   470  000796                     u170:
   471  000796  0900               	iorlw	0
   472  000798  B4D8               	btfsc	status,2,c
   473  00079A  0012               	return	
   474  00079C  D7D7               	goto	l40
   475  00079E                     __end_of_uart_string1:
   476                           	opt stack 0
   477                           tblptru	equ	0xFF8
   478                           tblptrh	equ	0xFF7
   479                           tblptrl	equ	0xFF6
   480                           tablat	equ	0xFF5
   481                           indf0	equ	0xFEF
   482                           postinc0	equ	0xFEE
   483                           fsr0h	equ	0xFEA
   484                           fsr0l	equ	0xFE9
   485                           wreg	equ	0xFE8
   486                           postdec1	equ	0xFE5
   487                           plusw1	equ	0xFE3
   488                           fsr1l	equ	0xFE1
   489                           indf2	equ	0xFDF
   490                           plusw2	equ	0xFDB
   491                           fsr2h	equ	0xFDA
   492                           fsr2l	equ	0xFD9
   493                           status	equ	0xFD8
   494                           
   495 ;; *************** function _uart_send1 *****************
   496 ;; Defined at:
   497 ;;		line 37 in file "automation-1.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  ch              1    wreg     unsigned char 
   500 ;; Auto vars:     Size  Location     Type
   501 ;;  ch              1    0[COMRAM] unsigned char 
   502 ;; Return value:  Size  Location     Type
   503 ;;                  1    wreg      void 
   504 ;; Registers used:
   505 ;;		wreg
   506 ;; Tracked objects:
   507 ;;		On entry : 0/0
   508 ;;		On exit  : 0/0
   509 ;;		Unchanged: 0/0
   510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   511 ;;      Params:         0       0       0       0       0       0       0
   512 ;;      Locals:         1       0       0       0       0       0       0
   513 ;;      Temps:          0       0       0       0       0       0       0
   514 ;;      Totals:         1       0       0       0       0       0       0
   515 ;;Total ram usage:        1 bytes
   516 ;; Hardware stack levels used:    1
   517 ;; This function calls:
   518 ;;		Nothing
   519 ;; This function is called by:
   520 ;;		_main
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text2
   525  000816                     __ptext2:
   526                           	opt stack 0
   527  000816                     _uart_send1:
   528                           	opt stack 30
   529                           
   530                           ;incstack = 0
   531                           ;uart_send1@ch stored from wreg
   532  000816  6E01               	movwf	uart_send1@ch,c
   533  000818                     l32:
   534  000818  A89E               	btfss	3998,4,c	;volatile
   535  00081A  D7FE               	goto	l32
   536                           
   537                           ;automation-1.c: 40: TXREG1=ch;
   538  00081C  C001  FFAD         	movff	uart_send1@ch,4013	;volatile
   539  000820  0012               	return		;funcret
   540  000822                     __end_of_uart_send1:
   541                           	opt stack 0
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           indf0	equ	0xFEF
   547                           postinc0	equ	0xFEE
   548                           fsr0h	equ	0xFEA
   549                           fsr0l	equ	0xFE9
   550                           wreg	equ	0xFE8
   551                           postdec1	equ	0xFE5
   552                           plusw1	equ	0xFE3
   553                           fsr1l	equ	0xFE1
   554                           indf2	equ	0xFDF
   555                           plusw2	equ	0xFDB
   556                           fsr2h	equ	0xFDA
   557                           fsr2l	equ	0xFD9
   558                           status	equ	0xFD8
   559                           
   560 ;; *************** function _uart_init1 *****************
   561 ;; Defined at:
   562 ;;		line 15 in file "automation-1.c"
   563 ;; Parameters:    Size  Location     Type
   564 ;;  baud            4   13[COMRAM] unsigned long 
   565 ;; Auto vars:     Size  Location     Type
   566 ;;  n               2   17[COMRAM] unsigned int 
   567 ;; Return value:  Size  Location     Type
   568 ;;                  1    wreg      void 
   569 ;; Registers used:
   570 ;;		wreg, status,2, status,0, cstack
   571 ;; Tracked objects:
   572 ;;		On entry : 0/0
   573 ;;		On exit  : 0/0
   574 ;;		Unchanged: 0/0
   575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   576 ;;      Params:         4       0       0       0       0       0       0
   577 ;;      Locals:         2       0       0       0       0       0       0
   578 ;;      Temps:          0       0       0       0       0       0       0
   579 ;;      Totals:         6       0       0       0       0       0       0
   580 ;;Total ram usage:        6 bytes
   581 ;; Hardware stack levels used:    1
   582 ;; Hardware stack levels required when called:    1
   583 ;; This function calls:
   584 ;;		___lldiv
   585 ;; This function is called by:
   586 ;;		_main
   587 ;; This function uses a non-reentrant model
   588 ;;
   589                           
   590                           	psect	text3
   591  00079E                     __ptext3:
   592                           	opt stack 0
   593  00079E                     _uart_init1:
   594                           	opt stack 29
   595                           
   596                           ;automation-1.c: 17: unsigned int n;
   597                           ;automation-1.c: 18: TXSTA1 = 0x00;
   598                           
   599                           ;incstack = 0
   600  00079E  0E00               	movlw	0
   601  0007A0  6EAC               	movwf	4012,c	;volatile
   602                           
   603                           ;automation-1.c: 19: RCSTA1 = 0x00;
   604  0007A2  0E00               	movlw	0
   605  0007A4  6EAB               	movwf	4011,c	;volatile
   606                           
   607                           ;automation-1.c: 20: TXSTAbits.SYNC = 0;
   608  0007A6  98AC               	bcf	4012,4,c	;volatile
   609                           
   610                           ;automation-1.c: 21: BAUDCON1bits.BRG16 = 1;
   611  0007A8  86B8               	bsf	4024,3,c	;volatile
   612                           
   613                           ;automation-1.c: 22: RCSTA1bits.SPEN = 1;
   614  0007AA  8EAB               	bsf	4011,7,c	;volatile
   615                           
   616                           ;automation-1.c: 23: RCSTA1bits.CREN = 1;
   617  0007AC  88AB               	bsf	4011,4,c	;volatile
   618                           
   619                           ;automation-1.c: 24: TXSTA1bits.BRGH = 1;
   620  0007AE  84AC               	bsf	4012,2,c	;volatile
   621                           
   622                           ;automation-1.c: 25: TXSTA1bits.TXEN = 1;
   623  0007B0  8AAC               	bsf	4012,5,c	;volatile
   624                           
   625                           ;automation-1.c: 26: n = ((16000000/4)/baud) - 1;
   626  0007B2  0E00               	movlw	0
   627  0007B4  6E01               	movwf	___lldiv@dividend,c
   628  0007B6  0E09               	movlw	9
   629  0007B8  6E02               	movwf	___lldiv@dividend+1,c
   630  0007BA  0E3D               	movlw	61
   631  0007BC  6E03               	movwf	___lldiv@dividend+2,c
   632  0007BE  0E00               	movlw	0
   633  0007C0  6E04               	movwf	___lldiv@dividend+3,c
   634  0007C2  C00E  F005         	movff	uart_init1@baud,___lldiv@divisor
   635  0007C6  C00F  F006         	movff	uart_init1@baud+1,___lldiv@divisor+1
   636  0007CA  C010  F007         	movff	uart_init1@baud+2,___lldiv@divisor+2
   637  0007CE  C011  F008         	movff	uart_init1@baud+3,___lldiv@divisor+3
   638  0007D2  EC64  F003         	call	___lldiv	;wreg free
   639  0007D6  0EFF               	movlw	255
   640  0007D8  2401               	addwf	?___lldiv,w,c
   641  0007DA  6E12               	movwf	uart_init1@n,c
   642  0007DC  0EFF               	movlw	255
   643  0007DE  2002               	addwfc	?___lldiv+1,w,c
   644  0007E0  6E13               	movwf	uart_init1@n+1,c
   645                           
   646                           ;automation-1.c: 27: SPBRGH1 = (n>>8);
   647  0007E2  5013               	movf	uart_init1@n+1,w,c
   648  0007E4  6EB0               	movwf	4016,c	;volatile
   649                           
   650                           ;automation-1.c: 28: SPBRG1 = n & 0xFF;
   651  0007E6  C012  FFAF         	movff	uart_init1@n,4015	;volatile
   652  0007EA  0012               	return		;funcret
   653  0007EC                     __end_of_uart_init1:
   654                           	opt stack 0
   655                           tblptru	equ	0xFF8
   656                           tblptrh	equ	0xFF7
   657                           tblptrl	equ	0xFF6
   658                           tablat	equ	0xFF5
   659                           indf0	equ	0xFEF
   660                           postinc0	equ	0xFEE
   661                           fsr0h	equ	0xFEA
   662                           fsr0l	equ	0xFE9
   663                           wreg	equ	0xFE8
   664                           postdec1	equ	0xFE5
   665                           plusw1	equ	0xFE3
   666                           fsr1l	equ	0xFE1
   667                           indf2	equ	0xFDF
   668                           plusw2	equ	0xFDB
   669                           fsr2h	equ	0xFDA
   670                           fsr2l	equ	0xFD9
   671                           status	equ	0xFD8
   672                           
   673 ;; *************** function ___lldiv *****************
   674 ;; Defined at:
   675 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lldiv.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;  dividend        4    0[COMRAM] unsigned long 
   678 ;;  divisor         4    4[COMRAM] unsigned long 
   679 ;; Auto vars:     Size  Location     Type
   680 ;;  quotient        4    8[COMRAM] unsigned long 
   681 ;;  counter         1   12[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;                  4    0[COMRAM] unsigned long 
   684 ;; Registers used:
   685 ;;		wreg, status,2, status,0
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   691 ;;      Params:         8       0       0       0       0       0       0
   692 ;;      Locals:         5       0       0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0
   694 ;;      Totals:        13       0       0       0       0       0       0
   695 ;;Total ram usage:       13 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; This function calls:
   698 ;;		Nothing
   699 ;; This function is called by:
   700 ;;		_uart_init1
   701 ;; This function uses a non-reentrant model
   702 ;;
   703                           
   704                           	psect	text4
   705  0006C8                     __ptext4:
   706                           	opt stack 0
   707  0006C8                     ___lldiv:
   708                           	opt stack 29
   709                           
   710                           ;incstack = 0
   711  0006C8  0E00               	movlw	0
   712  0006CA  6E09               	movwf	___lldiv@quotient,c
   713  0006CC  0E00               	movlw	0
   714  0006CE  6E0A               	movwf	___lldiv@quotient+1,c
   715  0006D0  0E00               	movlw	0
   716  0006D2  6E0B               	movwf	___lldiv@quotient+2,c
   717  0006D4  0E00               	movlw	0
   718  0006D6  6E0C               	movwf	___lldiv@quotient+3,c
   719  0006D8  5005               	movf	___lldiv@divisor,w,c
   720  0006DA  1006               	iorwf	___lldiv@divisor+1,w,c
   721  0006DC  1007               	iorwf	___lldiv@divisor+2,w,c
   722  0006DE  1008               	iorwf	___lldiv@divisor+3,w,c
   723  0006E0  B4D8               	btfsc	status,2,c
   724  0006E2  D02A               	goto	l404
   725  0006E4  0E01               	movlw	1
   726  0006E6  6E0D               	movwf	___lldiv@counter,c
   727  0006E8  D006               	goto	l758
   728  0006EA                     l756:
   729  0006EA  90D8               	bcf	status,0,c
   730  0006EC  3605               	rlcf	___lldiv@divisor,f,c
   731  0006EE  3606               	rlcf	___lldiv@divisor+1,f,c
   732  0006F0  3607               	rlcf	___lldiv@divisor+2,f,c
   733  0006F2  3608               	rlcf	___lldiv@divisor+3,f,c
   734  0006F4  2A0D               	incf	___lldiv@counter,f,c
   735  0006F6                     l758:
   736  0006F6  AE08               	btfss	___lldiv@divisor+3,7,c
   737  0006F8  D7F8               	goto	l756
   738  0006FA                     l760:
   739  0006FA  90D8               	bcf	status,0,c
   740  0006FC  3609               	rlcf	___lldiv@quotient,f,c
   741  0006FE  360A               	rlcf	___lldiv@quotient+1,f,c
   742  000700  360B               	rlcf	___lldiv@quotient+2,f,c
   743  000702  360C               	rlcf	___lldiv@quotient+3,f,c
   744  000704  5005               	movf	___lldiv@divisor,w,c
   745  000706  5C01               	subwf	___lldiv@dividend,w,c
   746  000708  5006               	movf	___lldiv@divisor+1,w,c
   747  00070A  5802               	subwfb	___lldiv@dividend+1,w,c
   748  00070C  5007               	movf	___lldiv@divisor+2,w,c
   749  00070E  5803               	subwfb	___lldiv@dividend+2,w,c
   750  000710  5008               	movf	___lldiv@divisor+3,w,c
   751  000712  5804               	subwfb	___lldiv@dividend+3,w,c
   752  000714  A0D8               	btfss	status,0,c
   753  000716  D009               	goto	l768
   754  000718  5005               	movf	___lldiv@divisor,w,c
   755  00071A  5E01               	subwf	___lldiv@dividend,f,c
   756  00071C  5006               	movf	___lldiv@divisor+1,w,c
   757  00071E  5A02               	subwfb	___lldiv@dividend+1,f,c
   758  000720  5007               	movf	___lldiv@divisor+2,w,c
   759  000722  5A03               	subwfb	___lldiv@dividend+2,f,c
   760  000724  5008               	movf	___lldiv@divisor+3,w,c
   761  000726  5A04               	subwfb	___lldiv@dividend+3,f,c
   762  000728  8009               	bsf	___lldiv@quotient,0,c
   763  00072A                     l768:
   764  00072A  90D8               	bcf	status,0,c
   765  00072C  3208               	rrcf	___lldiv@divisor+3,f,c
   766  00072E  3207               	rrcf	___lldiv@divisor+2,f,c
   767  000730  3206               	rrcf	___lldiv@divisor+1,f,c
   768  000732  3205               	rrcf	___lldiv@divisor,f,c
   769  000734  2E0D               	decfsz	___lldiv@counter,f,c
   770  000736  D7E1               	goto	l760
   771  000738                     l404:
   772  000738  C009  F001         	movff	___lldiv@quotient,?___lldiv
   773  00073C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
   774  000740  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
   775  000744  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
   776  000748  0012               	return		;funcret
   777  00074A                     __end_of___lldiv:
   778                           	opt stack 0
   779                           tblptru	equ	0xFF8
   780                           tblptrh	equ	0xFF7
   781                           tblptrl	equ	0xFF6
   782                           tablat	equ	0xFF5
   783                           indf0	equ	0xFEF
   784                           postinc0	equ	0xFEE
   785                           fsr0h	equ	0xFEA
   786                           fsr0l	equ	0xFE9
   787                           wreg	equ	0xFE8
   788                           postdec1	equ	0xFE5
   789                           plusw1	equ	0xFE3
   790                           fsr1l	equ	0xFE1
   791                           indf2	equ	0xFDF
   792                           plusw2	equ	0xFDB
   793                           fsr2h	equ	0xFDA
   794                           fsr2l	equ	0xFD9
   795                           status	equ	0xFD8
   796                           tblptru	equ	0xFF8
   797                           tblptrh	equ	0xFF7
   798                           tblptrl	equ	0xFF6
   799                           tablat	equ	0xFF5
   800                           indf0	equ	0xFEF
   801                           postinc0	equ	0xFEE
   802                           fsr0h	equ	0xFEA
   803                           fsr0l	equ	0xFE9
   804                           wreg	equ	0xFE8
   805                           postdec1	equ	0xFE5
   806                           plusw1	equ	0xFE3
   807                           fsr1l	equ	0xFE1
   808                           indf2	equ	0xFDF
   809                           plusw2	equ	0xFDB
   810                           fsr2h	equ	0xFDA
   811                           fsr2l	equ	0xFD9
   812                           status	equ	0xFD8
   813                           
   814                           	psect	rparam
   815  0000                     tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           indf0	equ	0xFEF
   820                           postinc0	equ	0xFEE
   821                           fsr0h	equ	0xFEA
   822                           fsr0l	equ	0xFE9
   823                           wreg	equ	0xFE8
   824                           postdec1	equ	0xFE5
   825                           plusw1	equ	0xFE3
   826                           fsr1l	equ	0xFE1
   827                           indf2	equ	0xFDF
   828                           plusw2	equ	0xFDB
   829                           fsr2h	equ	0xFDA
   830                           fsr2l	equ	0xFD9
   831                           status	equ	0xFD8


Data Sizes:
    Strings     3
    Constant    0
    Data        6
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     29      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    uart_string1@str	PTR unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[3]), main@name(COMRAM[6]), 


Critical Paths under _main in COMRAM

    _main->_uart_init1
    _uart_init1->___lldiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     725
                                             19 COMRAM    10    10      0
                         _uart_init1
                         _uart_send1
                       _uart_string1
 ---------------------------------------------------------------------------------
 (1) _uart_string1                                         2     0      2     173
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _uart_send1                                           1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init1                                           6     2      4     421
                                             13 COMRAM     6     2      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     290
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _uart_init1
     ___lldiv
   _uart_send1
   _uart_string1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1D      23       1       36.8%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23       9        0.0%
DATA                 0      0      23      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jan 10 11:08:53 2018

                     l32 0818                       l40 074C                      l404 0738  
                    l812 0672                      l814 067A                      l760 06FA  
                    l824 06A2                      l818 068A                      l756 06EA  
                    l758 06F6                      l768 072A                      l798 0776  
                    u160 0770                      u170 0796                      u227 0640  
                    u237 0664                      u167 0766                      u247 06B8  
                    u191 061A                      u177 078C                      wreg 000FE8  
             _TXSTA1bits 000FAC                     STR_1 0601                     _main 0606  
                   fsr0h 000FEA                     indf0 000FEF                     fsr0l 000FE9  
                   indf2 000FDF                     fsr1l 000FE1                     fsr2l 000FD9  
                   start 0000             ___param_bank 000000             _BAUDCON1bits 000FB8  
                  ?_main 0001          __end_of___lldiv 074A                    _TX1IF 007CF4  
                  _TRISC 000F94                    main@i 001C                    tablat 000FF5  
                  plusw1 000FE3                    plusw2 000FDB                    status 000FD8  
        __initialization 07EC             __end_of_main 06C8                   ??_main 0014  
          __activetblptr 000002                   _ANSELC 000F3A                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                   _TXREG1 000FAD                   _TXSTA1 000FAC  
              ??___lldiv 0009             __pdataCOMRAM 001E             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 080C            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  _SPBRGH1 000FB0                  __Hparam 0000  
                __Lparam 0000                  ___lldiv 06C8             __psmallconst 0600  
                __pcinit 07EC                  __ramtop 0600                  __ptext0 0606  
                __ptext1 074A                  __ptext2 0816                  __ptext3 079E  
                __ptext4 06C8     end_of_initialization 080C            __Lmediumconst 0000  
        ___lldiv@divisor 0005          ___lldiv@counter 000D            ?_uart_string1 0001  
                postdec1 000FE5                  postinc0 000FEE               _uart_init1 079E  
             _uart_send1 0816              uart_init1@n 0012                _TXSTAbits 000FAC  
         ??_uart_string1 0003            __pidataCOMRAM 0822      start_initialization 07EC  
            ?_uart_init1 000E              ?_uart_send1 0001                 ?___lldiv 0001  
            __smallconst 0600     __end_of_uart_string1 079E      __size_of_uart_init1 004E  
    __size_of_uart_send1 000C                main@F6948 001E                copy_data0 0800  
               __Hrparam 0000                 __Lrparam 0000         __size_of___lldiv 0082  
         uart_init1@baud 000E            __size_of_main 00C2             ??_uart_init1 0012  
           ??_uart_send1 0001                 main@name 0016    __size_of_uart_string1 0054  
       ___lldiv@dividend 0001       __end_of_uart_init1 07EC       __end_of_uart_send1 0822  
             _RCSTA1bits 000FAB             _uart_string1 074A         ___lldiv@quotient 0009  
           uart_send1@ch 0001          uart_string1@str 0001  
